<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.3
//
// <auto-generated>
//
// Generated from file `domain.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace model
{
    global $model__t_CategoriaPersona;
    class CategoriaPersona
    {
        const FUNCIONARIO = 0;
        const ACADEMICO = 1;
        const ESTUDIANTE = 2;
    }

    $model__t_CategoriaPersona = IcePHP_defineEnum('::model::CategoriaPersona', array('FUNCIONARIO', 0, 'ACADEMICO', 1, 'ESTUDIANTE', 2));
}

namespace model
{
    global $model__t_Sexo;
    class Sexo
    {
        const _VAR = 0;
        const MUJ = 1;
        const OTHER = 2;
    }

    $model__t_Sexo = IcePHP_defineEnum('::model::Sexo', array('VAR', 0, 'MUJ', 1, 'OTHER', 2));
}

namespace model
{
    global $model__t_Persona;
    class Persona extends \Ice\Value
    {
        public function __construct($uid=0, $run='', $nombre='', $sexo=\model\Sexo::_VAR, $unidad='', $email='', $telefonoMovil='', $telefonoFijo='', $categoriaPersona=\model\CategoriaPersona::FUNCIONARIO)
        {
            $this->uid = $uid;
            $this->run = $run;
            $this->nombre = $nombre;
            $this->sexo = $sexo;
            $this->unidad = $unidad;
            $this->email = $email;
            $this->telefonoMovil = $telefonoMovil;
            $this->telefonoFijo = $telefonoFijo;
            $this->categoriaPersona = $categoriaPersona;
        }

        public function ice_id()
        {
            return '::model::Persona';
        }

        public static function ice_staticId()
        {
            return '::model::Persona';
        }

        public function __toString()
        {
            global $model__t_Persona;
            return IcePHP_stringify($this, $model__t_Persona);
        }

        public $uid;
        public $run;
        public $nombre;
        public $sexo;
        public $unidad;
        public $email;
        public $telefonoMovil;
        public $telefonoFijo;
        public $categoriaPersona;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    global $IcePHP__t_string;
    global $model__t_Sexo;
    global $model__t_CategoriaPersona;
    $model__t_Persona = IcePHP_defineClass('::model::Persona', '\\model\\Persona', -1, false, false, $Ice__t_Value, array(
        array('uid', $IcePHP__t_int, false, 0),
        array('run', $IcePHP__t_string, false, 0),
        array('nombre', $IcePHP__t_string, false, 0),
        array('sexo', $model__t_Sexo, false, 0),
        array('unidad', $IcePHP__t_string, false, 0),
        array('email', $IcePHP__t_string, false, 0),
        array('telefonoMovil', $IcePHP__t_string, false, 0),
        array('telefonoFijo', $IcePHP__t_string, false, 0),
        array('categoriaPersona', $model__t_CategoriaPersona, false, 0)));
}

namespace model
{
    global $model__t_Vehiculo;
    class Vehiculo extends \Ice\Value
    {
        public function __construct($uid=0, $patente='', $marca='', $modelo='', $anio=0, $observaciones='', $runDuenio='')
        {
            $this->uid = $uid;
            $this->patente = $patente;
            $this->marca = $marca;
            $this->modelo = $modelo;
            $this->anio = $anio;
            $this->observaciones = $observaciones;
            $this->runDuenio = $runDuenio;
        }

        public function ice_id()
        {
            return '::model::Vehiculo';
        }

        public static function ice_staticId()
        {
            return '::model::Vehiculo';
        }

        public function __toString()
        {
            global $model__t_Vehiculo;
            return IcePHP_stringify($this, $model__t_Vehiculo);
        }

        public $uid;
        public $patente;
        public $marca;
        public $modelo;
        public $anio;
        public $observaciones;
        public $runDuenio;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    global $IcePHP__t_string;
    $model__t_Vehiculo = IcePHP_defineClass('::model::Vehiculo', '\\model\\Vehiculo', -1, false, false, $Ice__t_Value, array(
        array('uid', $IcePHP__t_int, false, 0),
        array('patente', $IcePHP__t_string, false, 0),
        array('marca', $IcePHP__t_string, false, 0),
        array('modelo', $IcePHP__t_string, false, 0),
        array('anio', $IcePHP__t_int, false, 0),
        array('observaciones', $IcePHP__t_string, false, 0),
        array('runDuenio', $IcePHP__t_string, false, 0)));
}

namespace model
{
    global $model__t_Acceso;
    class Acceso extends \Ice\Value
    {
        public function __construct($uid=0, $horaEntrada='', $patente='')
        {
            $this->uid = $uid;
            $this->horaEntrada = $horaEntrada;
            $this->patente = $patente;
        }

        public function ice_id()
        {
            return '::model::Acceso';
        }

        public static function ice_staticId()
        {
            return '::model::Acceso';
        }

        public function __toString()
        {
            global $model__t_Acceso;
            return IcePHP_stringify($this, $model__t_Acceso);
        }

        public $uid;
        public $horaEntrada;
        public $patente;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    global $IcePHP__t_string;
    $model__t_Acceso = IcePHP_defineClass('::model::Acceso', '\\model\\Acceso', -1, false, false, $Ice__t_Value, array(
        array('uid', $IcePHP__t_int, false, 0),
        array('horaEntrada', $IcePHP__t_string, false, 0),
        array('patente', $IcePHP__t_string, false, 0)));
}

namespace model
{
    global $model__t_Vehiculos;

    if(!isset($model__t_Vehiculos))
    {
        global $model__t_Vehiculo;
        $model__t_Vehiculos = IcePHP_defineSequence('::model::Vehiculos', $model__t_Vehiculo);
    }
}

namespace model
{
    global $model__t_RunRelationNotFoundException;
    class RunRelationNotFoundException extends \Ice\UserException
    {
        public function __construct($reason="ForeyKey run not found on the persona table")
        {
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::model::RunRelationNotFoundException';
        }

        public function __toString()
        {
            global $model__t_RunRelationNotFoundException;
            return IcePHP_stringifyException($this, $model__t_RunRelationNotFoundException);
        }

        public $reason;
    }
    global $IcePHP__t_string;

    $model__t_RunRelationNotFoundException = IcePHP_defineException('::model::RunRelationNotFoundException', '\\model\\RunRelationNotFoundException', false, null, array(
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace model
{
    global $model__t_NotFoundException;
    class NotFoundException extends \Ice\UserException
    {
        public function __construct($reason="information not found on the system's database")
        {
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::model::NotFoundException';
        }

        public function __toString()
        {
            global $model__t_NotFoundException;
            return IcePHP_stringifyException($this, $model__t_NotFoundException);
        }

        public $reason;
    }
    global $IcePHP__t_string;

    $model__t_NotFoundException = IcePHP_defineException('::model::NotFoundException', '\\model\\NotFoundException', false, null, array(
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace model
{
    global $model__t_DuplicateDataException;
    class DuplicateDataException extends \Ice\UserException
    {
        public function __construct($reason="information already exist on the system's database")
        {
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::model::DuplicateDataException';
        }

        public function __toString()
        {
            global $model__t_DuplicateDataException;
            return IcePHP_stringifyException($this, $model__t_DuplicateDataException);
        }

        public $reason;
    }
    global $IcePHP__t_string;

    $model__t_DuplicateDataException = IcePHP_defineException('::model::DuplicateDataException', '\\model\\DuplicateDataException', false, null, array(
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace model
{
    global $model__t_ServerException;
    class ServerException extends \Ice\UserException
    {
        public function __construct($reason="internal error server doesn't connect to database ")
        {
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::model::ServerException';
        }

        public function __toString()
        {
            global $model__t_ServerException;
            return IcePHP_stringifyException($this, $model__t_ServerException);
        }

        public $reason;
    }
    global $IcePHP__t_string;

    $model__t_ServerException = IcePHP_defineException('::model::ServerException', '\\model\\ServerException', false, null, array(
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace model
{
    global $model__t_Contratos;
    global $model__t_ContratosPrx;

    class ContratosPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::model::Contratos', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::model::Contratos', $facet);
        }

        public static function ice_staticId()
        {
            return '::model::Contratos';
        }
    }
    $model__t_Contratos = IcePHP_defineClass('::model::Contratos', '\\model\\Contratos', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $model__t_ContratosPrx = IcePHP_defineProxy('::model::Contratos', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_string;
    global $model__t_Persona;
    global $model__t_Vehiculo;
    global $model__t_Vehiculos;
    IcePHP_defineOperation($model__t_ContratosPrx, 'verificarPersona', 0, 0, 0, array(array($IcePHP__t_string)), null, array($model__t_Persona), array($model__t_NotFoundException, $model__t_ServerException));
    IcePHP_defineOperation($model__t_ContratosPrx, 'autorizarVehiculo', 0, 0, 0, array(array($IcePHP__t_string)), null, array($model__t_Vehiculo), null);
    IcePHP_defineOperation($model__t_ContratosPrx, 'obtenerVehiculos', 0, 0, 0, array(array($IcePHP__t_string)), null, array($model__t_Vehiculos), array($model__t_NotFoundException));
}

namespace model
{
    global $model__t_TheSystem;
    global $model__t_TheSystemPrx;

    class TheSystemPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::model::TheSystem', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::model::TheSystem', $facet);
        }

        public static function ice_staticId()
        {
            return '::model::TheSystem';
        }
    }
    $model__t_TheSystem = IcePHP_defineClass('::model::TheSystem', '\\model\\TheSystem', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $model__t_TheSystemPrx = IcePHP_defineProxy('::model::TheSystem', $Ice__t_ObjectPrx, null);

    global $model__t_Persona;
    global $IcePHP__t_string;
    global $model__t_Vehiculo;
    global $IcePHP__t_long;
    IcePHP_defineOperation($model__t_TheSystemPrx, 'registrarPersona', 0, 0, 0, array(array($model__t_Persona)), null, array($model__t_Persona), array($model__t_DuplicateDataException, $model__t_ServerException));
    IcePHP_defineOperation($model__t_TheSystemPrx, 'eliminarPersona', 0, 0, 0, array(array($IcePHP__t_string)), null, array($model__t_Persona), array($model__t_ServerException));
    IcePHP_defineOperation($model__t_TheSystemPrx, 'editarPersona', 0, 0, 0, array(array($model__t_Persona)), null, array($model__t_Persona), array($model__t_ServerException));
    IcePHP_defineOperation($model__t_TheSystemPrx, 'registrarVehiculo', 0, 0, 0, array(array($model__t_Vehiculo)), null, array($model__t_Vehiculo), array($model__t_DuplicateDataException, $model__t_RunRelationNotFoundException, $model__t_ServerException));
    IcePHP_defineOperation($model__t_TheSystemPrx, 'eliminarVehiculo', 0, 0, 0, array(array($IcePHP__t_string)), null, array($model__t_Vehiculo), array($model__t_ServerException));
    IcePHP_defineOperation($model__t_TheSystemPrx, 'editarVehiculo', 0, 0, 0, array(array($model__t_Vehiculo)), null, array($model__t_Vehiculo), array($model__t_ServerException));
    IcePHP_defineOperation($model__t_TheSystemPrx, 'getDelay', 0, 0, 0, array(array($IcePHP__t_long)), null, array($IcePHP__t_long), array($model__t_ServerException));
}
?>
